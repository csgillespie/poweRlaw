[{"path":"http://csgillespie.github.io/poweRlaw/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Colin Gillespie. Author, maintainer.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Colin S. Gillespie (2015). Fitting Heavy Tailed Distributions: poweRlaw Package. Journal Statistical Software, 64(2), 1-16. URL https://doi.org/10.18637/jss.v064.i02/.","code":"@Article{,   title = {Fitting Heavy Tailed Distributions: The {poweRlaw} Package},   author = {Colin S Gillespie},   journal = {Journal of Statistical Software},   year = {2015},   volume = {64},   number = {2},   pages = {1--16},   url = {https://doi.org/10.18637/jss.v064.i02}, }"},{"path":"http://csgillespie.github.io/poweRlaw/index.html","id":"the-powerlaw-package","dir":"","previous_headings":"","what":"Analysis of Heavy Tailed Distributions","title":"Analysis of Heavy Tailed Distributions","text":"package implements discrete continuous maximum likelihood estimators fitting power-law distribution data using methods described Clauset et al, 2009. also provides function fit log-normal Poisson distributions. Additionally, goodness--fit based approach used estimate lower cut-scaling region. code developed package influenced python R code found Aaron Clauset’s website. particular, R code Laurent Dubroca Cosma Shalizi. cite package academic work, please use: Gillespie, C. S. “Fitting heavy tailed distributions: poweRlaw package.” Journal Statistical Software, 64(2) 2015. (pdf). different way handling powerlaw type distributions, see Gillespie, C.S. ” Estimating number casualties American Indian war: Bayesian analysis using power law distribution.” Annals Applied Statistics, 2017. (pdf)","code":""},{"path":"http://csgillespie.github.io/poweRlaw/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analysis of Heavy Tailed Distributions","text":"package hosted CRAN can installed usual way: Alternatively, development version can install github using devtools package:","code":"install.packages(\"poweRlaw\") install.packages(\"devtools\") devtools::install_github(\"csgillespie/poweRlaw\")"},{"path":"http://csgillespie.github.io/poweRlaw/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Analysis of Heavy Tailed Distributions","text":"get started, load package work four vignettes (links current CRAN version): Getting started Worked examples Comparing distributions JSS paper Alternatively, can access vignettes within package: plots show line best fit Moby Dick blackout data sets (Clauset et al, 2009).","code":"library(\"poweRlaw\") browseVignettes(\"poweRlaw\")"},{"path":"http://csgillespie.github.io/poweRlaw/index.html","id":"other-information","dir":"","previous_headings":"","what":"Other information","title":"Analysis of Heavy Tailed Distributions","text":"suggestions find bugs, please use github issue tracker Feel free submit pull requests Data originally obtained Arron Clausett’s website. site longer available. Development package supported Jumping Rivers","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/bootstrap_moby.html","id":null,"dir":"Reference","previous_headings":"","what":"Example bootstrap results for the full Moby Dick data set — bootstrap_moby","title":"Example bootstrap results for the full Moby Dick data set — bootstrap_moby","text":"explore uncertainity model fit, package provides bootstrap function. bootstrap_moby output running 5000 bootstraps full Moby Dick data set (discrete power law) using bootstrap function. bootstrap_p_moby output running 5000 bootstraps full Moby Dick data set (discrete power law) using bootstrap_p function. bootstrap_moby values correspond first row table 6.1 Clauset et al paper: bootstrap_moby$gof K-S statistic bootstrap_moby$bootstraps data frame optimal values bootstrapping procedure. Column 1: K-S, Column 2: xmin, Column 3: alpha. standard deviation column 2 3 2.2 0.033 (paper gives 2 0.02 respectively). bootstrap_p_moby gives p-value hypothesis test whether data follows power-law. simulation study, get value 0.43 (paper gives 0.49).","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/bootstrap_moby.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example bootstrap results for the full Moby Dick data set — bootstrap_moby","text":"list","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/bootstrap_moby.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example bootstrap results for the full Moby Dick data set — bootstrap_moby","text":"M. E. J. Newman, \"Power laws, Pareto distributions Zipf's law.\" Contemporary Physics 46, 323 (2005).","code":""},{"path":[]},{"path":"http://csgillespie.github.io/poweRlaw/reference/bootstrap_moby.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example bootstrap results for the full Moby Dick data set — bootstrap_moby","text":"","code":"## Generate the bootstrap_moby data set if (FALSE) { # \\dontrun{ data(moby) m = displ$new(moby) bs = bootstrap(m, no_of_sims=5000, threads=4, seed=1) } # }  #' ## Generate the bootstrap_p_moby data set if (FALSE) { # \\dontrun{ bs_p = bootstrap_p(m, no_of_sims=5000, threads=4, seed=1) } # }"},{"path":"http://csgillespie.github.io/poweRlaw/reference/compare_distributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Vuong's test for non-nested models — compare_distributions","title":"Vuong's test for non-nested models — compare_distributions","text":"Since possible fit power law models data set, recommended alternative distributions considered. standard technique use Vuong's test. likelihood ratio test model selection using Kullback-Leibler criteria. test statistic, R, ratio log-likelihoods data two competing models. sign R indicates model better. Since value R esimated, use method proposed Vuong, 1989 select model.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/compare_distributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vuong's test for non-nested models — compare_distributions","text":"","code":"compare_distributions(d1, d2)"},{"path":"http://csgillespie.github.io/poweRlaw/reference/compare_distributions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vuong's test for non-nested models — compare_distributions","text":"d1 distribution object d2 distribution object","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/compare_distributions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vuong's test for non-nested models — compare_distributions","text":"function returns test_statistic test statistic. p_one_sided one-sided p-value, upper limit getting small log-likelihood ratio first distribution, d1, actually true. p_two_sided two-sided p-value, probability getting log-likelihood ratio deviates much zero either direction, two distributions actually equally good. ratio data frame two columns. first column x value second column difference log-likelihoods.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/compare_distributions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vuong's test for non-nested models — compare_distributions","text":"function compares two models. null hypothesis classes distributions equally far true distribution.  true, log-likelihood ratio (asymptotically) Normal distribution mean zero. test statistic sample average log-likelihood ratio, standardized consistent estimate standard deviation. null hypothesis false, one class distributions closer \"truth\", test statistic goes +/-infinity probability 1, indicating better-fitting class distributions.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/compare_distributions.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Vuong's test for non-nested models — compare_distributions","text":"Code initially based R code developed Cosma Rohilla Shalizi (http://bactra.org/). Also see Appendix C Clauset et al, 2009.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/compare_distributions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vuong's test for non-nested models — compare_distributions","text":"Vuong, Quang H. (1989): \"Likelihood Ratio Tests Model Selection Non-Nested Hypotheses\", Econometrica 57: 307–333.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/compare_distributions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vuong's test for non-nested models — compare_distributions","text":"","code":"######################################################## # Example data                                         # ######################################################## x = rpldis(100, xmin=2, alpha=3)  ######################################################## ##Continuous power law                                 # ######################################################## m1 = conpl$new(x) m1$setXmin(estimate_xmin(m1))  ######################################################## ##Exponential ######################################################## m2 = conexp$new(x) m2$setXmin(m1$getXmin()) est2 = estimate_pars(m2) m2$setPars(est2$pars)  ######################################################## ##Vuong's test                                         # ######################################################## comp = compare_distributions(m1, m2) plot(comp)"},{"path":"http://csgillespie.github.io/poweRlaw/reference/displ.html","id":null,"dir":"Reference","previous_headings":"","what":"Heavy-tailed distributions — conlnorm-class","title":"Heavy-tailed distributions — conlnorm-class","text":"poweRlaw package supports number distributions: displ Discrete power-law dislnorm Discrete log-normal dispois Discrete Poisson disexp Discrete Exponential conpl Continuous power-law conlnorm Continuous log-normal conexp Continuous exponential object inherits discrete_distribution ctn_distribution class.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/displ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heavy-tailed distributions — conlnorm-class","text":"... object typically created passing data using dat field. field standard setters getters.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/displ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heavy-tailed distributions — conlnorm-class","text":"reference object","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/displ.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Heavy-tailed distributions — conlnorm-class","text":"distribution object four fields. However, object typically created passing data, dat field. field standard setters getters. See examples dat data set. xmin lower threshold, xmin. Typically set initialisation. continuous  power-law, xmin >= 0 discrete distributions, xmin >0 pars parameter vector. Typically set initialisation. Note lognormal distribution two parameters. internal list. list differs objects altered.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/displ.html","id":"copying-objects","dir":"Reference","previous_headings":"","what":"Copying objects","title":"Heavy-tailed distributions — conlnorm-class","text":"Distribution objects reference classes. means copy objects, need use copy method, .e. obj$copy(). See examples details.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/displ.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heavy-tailed distributions — conlnorm-class","text":"","code":"############################################################## #Load data and create distribution object                    # ############################################################## data(moby) m = displ$new(moby)  ############################################################## #Xmin is initially the smallest x value                      # ############################################################## m$getXmin() #> [1] 1 m$getPars() #> NULL  ############################################################## #Set Xmin and parameter                                      # ############################################################## m$setXmin(2) m$setPars(2)   ############################################################## #Plot the data and fitted distribution                       # ############################################################## plot(m) lines(m)  ############################################################## #Copying                                                     # ############################################################## ## Shallow copy m_cpy = m m_cpy$setXmin(5) m$getXmin() #> [1] 5 ## Instead m_cpy = m$copy()"},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_cdf-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"The cumulative distribution function (cdf) — dist_cdf","title":"The cumulative distribution function (cdf) — dist_cdf","text":"generic function calculating cumulative distribution function (cdf) distribution objects. similar base R's pnorm normal distribution. dist_cdf function calculates cumulative probability distribution current parameters xmin value.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_cdf-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The cumulative distribution function (cdf) — dist_cdf","text":"","code":"dist_cdf(m, q = NULL, lower_tail = FALSE)  # S4 method for class 'conlnorm' dist_cdf(m, q = NULL, lower_tail = TRUE)  # S4 method for class 'conlnorm' dist_all_cdf(m, lower_tail = TRUE, xmax = 1e+05)  # S4 method for class 'conexp' dist_cdf(m, q = NULL, lower_tail = TRUE)  # S4 method for class 'conexp' dist_all_cdf(m, lower_tail = TRUE, xmax = 1e+05)  # S4 method for class 'conpl' dist_cdf(m, q = NULL, lower_tail = TRUE)  # S4 method for class 'conpl' dist_all_cdf(m, lower_tail = TRUE, xmax = 1e+05)  # S4 method for class 'conweibull' dist_cdf(m, q = NULL, lower_tail = TRUE)  # S4 method for class 'conweibull' dist_all_cdf(m, lower_tail = TRUE, xmax = 1e+05)  # S4 method for class 'disexp' dist_cdf(m, q = NULL, lower_tail = TRUE)  # S4 method for class 'disexp' dist_all_cdf(m, lower_tail = TRUE, xmax = 1e+05)  # S4 method for class 'dislnorm' dist_cdf(m, q = NULL, lower_tail = TRUE)  # S4 method for class 'dislnorm' dist_all_cdf(m, lower_tail = TRUE, xmax = 1e+05)  # S4 method for class 'displ' dist_cdf(m, q = NULL, lower_tail = TRUE)  # S4 method for class 'displ' dist_all_cdf(m, lower_tail = TRUE, xmax = 1e+05)  # S4 method for class 'dispois' dist_cdf(m, q = NULL, lower_tail = TRUE)  # S4 method for class 'dispois' dist_all_cdf(m, lower_tail = TRUE, xmax = 1e+05)"},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_cdf-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The cumulative distribution function (cdf) — dist_cdf","text":"m distribution object. q vector values function evaluated. q NULL (default), data values used. lower_tail logical; TRUE (default), probabilities \\(P[X \\le x]\\), otherwise, \\(P[X > x]\\). xmax default 1e5. maximum x value calculated working CDF.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_cdf-methods.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The cumulative distribution function (cdf) — dist_cdf","text":"method alter internal state distribution objects.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_cdf-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The cumulative distribution function (cdf) — dist_cdf","text":"","code":"########################################## #Load data and create distribution object# ########################################## data(moby_sample) m = displ$new(moby_sample) m$setXmin(7); m$setPars(2)  ########################################## #Calculate the CDF at a particular values# ########################################## dist_cdf(m, 10:15) #> [1] 0.3802063 0.4340306 0.4792580 0.5177949 0.5510232 0.5799687  ########################################## #Calculate the CDF at the data values    # ########################################## dist_cdf(m) #>    [1] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>    [8] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>   [15] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>   [22] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>   [29] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>   [36] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>   [43] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>   [50] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>   [57] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>   [64] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>   [71] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>   [78] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>   [85] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>   [92] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>   [99] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [106] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [113] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [120] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [127] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [134] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [141] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [148] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [155] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [162] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [169] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [176] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [183] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [190] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [197] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [204] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [211] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [218] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [225] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [232] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [239] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [246] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [253] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [260] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [267] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [274] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [281] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [288] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [295] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [302] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [309] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [316] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [323] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [330] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [337] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [344] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [351] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [358] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [365] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [372] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [379] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [386] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [393] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [400] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [407] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [414] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [421] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [428] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [435] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [442] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [449] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [456] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [463] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [470] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [477] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [484] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [491] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [498] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [505] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [512] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [519] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [526] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [533] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [540] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [547] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [554] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [561] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [568] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [575] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [582] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [589] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [596] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [603] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [610] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [617] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [624] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [631] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [638] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [645] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [652] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [659] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [666] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [673] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [680] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [687] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [694] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [701] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [708] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [715] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [722] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [729] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [736] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [743] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [750] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [757] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [764] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [771] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [778] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [785] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [792] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [799] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [806] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [813] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [820] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [827] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [834] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [841] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [848] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [855] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [862] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [869] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [876] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [883] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [890] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [897] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [904] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [911] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [918] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [925] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [932] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [939] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [946] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [953] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [960] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [967] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [974] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [981] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [988] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [995] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1002] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1009] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1016] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1023] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1030] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1037] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1044] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1051] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1058] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1065] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1072] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1079] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1086] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1093] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1100] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1107] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1114] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1121] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1128] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1135] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1142] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1149] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1156] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1163] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1170] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1177] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1184] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1191] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1198] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1205] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1212] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1219] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1226] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1233] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1240] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1247] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1254] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1261] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1268] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1275] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1282] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1289] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1296] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1303] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1310] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1317] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1324] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1331] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1338] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1345] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1352] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1359] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1366] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1373] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1380] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1387] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1394] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1401] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1408] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1415] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1422] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1429] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1436] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1443] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1450] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1457] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1464] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1471] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1478] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1485] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1492] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1499] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1506] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1513] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1520] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1527] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1534] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1541] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1548] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1555] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1562] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1569] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1576] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1583] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1590] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1597] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1604] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1611] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1618] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1625] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1632] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1639] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1646] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1653] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [1660] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.1329131 #> [1667] 0.1329131 0.1329131 0.1329131 0.1329131 0.1329131 0.1329131 0.1329131 #> [1674] 0.1329131 0.1329131 0.1329131 0.1329131 0.1329131 0.1329131 0.1329131 #> [1681] 0.1329131 0.1329131 0.1329131 0.1329131 0.1329131 0.1329131 0.1329131 #> [1688] 0.1329131 0.1329131 0.1329131 0.1329131 0.1329131 0.1329131 0.1329131 #> [1695] 0.1329131 0.1329131 0.1329131 0.1329131 0.1329131 0.1329131 0.1329131 #> [1702] 0.1329131 0.1329131 0.1329131 0.2346747 0.2346747 0.2346747 0.2346747 #> [1709] 0.2346747 0.2346747 0.2346747 0.2346747 0.2346747 0.2346747 0.2346747 #> [1716] 0.2346747 0.2346747 0.2346747 0.2346747 0.2346747 0.2346747 0.2346747 #> [1723] 0.2346747 0.2346747 0.2346747 0.2346747 0.2346747 0.2346747 0.2346747 #> [1730] 0.2346747 0.2346747 0.2346747 0.2346747 0.2346747 0.2346747 0.2346747 #> [1737] 0.2346747 0.2346747 0.2346747 0.2346747 0.2346747 0.2346747 0.3150789 #> [1744] 0.3150789 0.3150789 0.3150789 0.3150789 0.3150789 0.3150789 0.3150789 #> [1751] 0.3150789 0.3150789 0.3150789 0.3150789 0.3150789 0.3150789 0.3150789 #> [1758] 0.3150789 0.3150789 0.3150789 0.3150789 0.3150789 0.3150789 0.3150789 #> [1765] 0.3150789 0.3150789 0.3802063 0.3802063 0.3802063 0.3802063 0.3802063 #> [1772] 0.3802063 0.3802063 0.3802063 0.3802063 0.3802063 0.3802063 0.3802063 #> [1779] 0.3802063 0.3802063 0.3802063 0.3802063 0.3802063 0.3802063 0.3802063 #> [1786] 0.3802063 0.3802063 0.3802063 0.4340306 0.4340306 0.4340306 0.4340306 #> [1793] 0.4340306 0.4340306 0.4340306 0.4340306 0.4340306 0.4340306 0.4340306 #> [1800] 0.4340306 0.4340306 0.4340306 0.4340306 0.4340306 0.4340306 0.4340306 #> [1807] 0.4792580 0.4792580 0.4792580 0.4792580 0.4792580 0.4792580 0.4792580 #> [1814] 0.4792580 0.4792580 0.4792580 0.4792580 0.4792580 0.4792580 0.4792580 #> [1821] 0.4792580 0.5177949 0.5177949 0.5177949 0.5177949 0.5177949 0.5177949 #> [1828] 0.5177949 0.5177949 0.5177949 0.5177949 0.5177949 0.5177949 0.5177949 #> [1835] 0.5177949 0.5177949 0.5510232 0.5510232 0.5510232 0.5510232 0.5510232 #> [1842] 0.5510232 0.5510232 0.5510232 0.5510232 0.5799687 0.5799687 0.5799687 #> [1849] 0.5799687 0.5799687 0.5799687 0.5799687 0.5799687 0.5799687 0.5799687 #> [1856] 0.5799687 0.5799687 0.5799687 0.6054091 0.6054091 0.6054091 0.6054091 #> [1863] 0.6054091 0.6054091 0.6054091 0.6054091 0.6279445 0.6279445 0.6279445 #> [1870] 0.6279445 0.6279445 0.6279445 0.6279445 0.6480456 0.6480456 0.6480456 #> [1877] 0.6480456 0.6480456 0.6480456 0.6660864 0.6660864 0.6660864 0.6660864 #> [1884] 0.6660864 0.6660864 0.6660864 0.6660864 0.6660864 0.6823683 0.6823683 #> [1891] 0.6971364 0.6971364 0.6971364 0.6971364 0.6971364 0.7105925 0.7105925 #> [1898] 0.7105925 0.7229039 0.7229039 0.7229039 0.7229039 0.7229039 0.7229039 #> [1905] 0.7342107 0.7446311 0.7446311 0.7446311 0.7446311 0.7446311 0.7542653 #> [1912] 0.7542653 0.7542653 0.7542653 0.7542653 0.7631991 0.7631991 0.7631991 #> [1919] 0.7792502 0.7792502 0.7792502 0.7864866 0.7864866 0.7864866 0.7864866 #> [1926] 0.7864866 0.7864866 0.7932637 0.7932637 0.7996238 0.8112381 0.8165546 #> [1933] 0.8215799 0.8215799 0.8263372 0.8263372 0.8263372 0.8308474 0.8308474 #> [1940] 0.8308474 0.8308474 0.8308474 0.8391997 0.8391997 0.8430741 0.8536524 #> [1947] 0.8568686 0.8628947 0.8628947 0.8684339 0.8735430 0.8735430 0.8735430 #> [1954] 0.8735430 0.8782701 0.8805035 0.8826565 0.8847333 0.8847333 0.8886738 #> [1961] 0.8905447 0.8923538 0.9035167 0.9062931 0.9125820 0.9148673 0.9159658 #> [1968] 0.9190974 0.9190974 0.9200901 0.9220040 0.9229270 0.9238285 0.9247090 #> [1975] 0.9288232 0.9338814 0.9338814 0.9345459 0.9358356 0.9455004 0.9463975 #> [1982] 0.9485161 0.9561433 0.9561433 0.9575719 0.9650792 0.9673547 0.9676788 #> [1989] 0.9684614 0.9737918 0.9775035 0.9784703 0.9840569 0.9891364 0.9903300 #> [1996] 0.9915474 0.9937468 0.9942594 0.9972572 0.9989847"},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_data_cdf-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"The data cumulative distribution function — dist_all_cdf","title":"The data cumulative distribution function — dist_all_cdf","text":"generic function distribution objects. function calculates data empirical cdf. functions dist_data_all_cdf dist_all_cdf available discrete distributions. main purpose optimise bootstrap procedure, generating vector xmin:xmax quick. Also, bootstrapping large values can generated.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_data_cdf-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The data cumulative distribution function — dist_all_cdf","text":"","code":"dist_all_cdf(m, lower_tail = TRUE, xmax = 1e+05)  dist_data_cdf(m, lower_tail = TRUE, xmax = 1e+05)  dist_data_all_cdf(m, lower_tail = TRUE, xmax = 1e+05)  # S4 method for class 'discrete_distribution' dist_data_cdf(m, lower_tail = TRUE, xmax = 1e+05)  # S4 method for class 'discrete_distribution' dist_data_all_cdf(m, lower_tail = TRUE, xmax = 1e+05)  # S4 method for class 'ctn_distribution' dist_data_cdf(m, lower_tail = TRUE, xmax = 1e+05)"},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_data_cdf-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The data cumulative distribution function — dist_all_cdf","text":"m distribution object. lower_tail logical; TRUE (default), probabilities \\(P[X \\le x]\\), otherwise, \\(P[X > x]\\). xmax default 1e5. maximum x value calculated working CDF.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_data_cdf-methods.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The data cumulative distribution function — dist_all_cdf","text":"method alter internal state distribution objects.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_data_cdf-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The data cumulative distribution function — dist_all_cdf","text":"","code":"########################################## #Load data and create distribution object# ########################################## data(moby_sample) m = displ$new(moby_sample) m$setXmin(7);m$setPars(2)  ########################################## # The data cdf                           # ########################################## dist_data_cdf(m) #>  [1] 0.1164179 0.2298507 0.3014925 0.3671642 0.4208955 0.4656716 0.5104478 #>  [8] 0.5373134 0.5761194 0.6000000 0.6208955 0.6388060 0.6656716 0.6716418 #> [15] 0.6865672 0.6955224 0.7134328 0.7164179 0.7313433 0.7462687 0.7552239 #> [22] 0.7641791 0.7820896 0.7880597 0.7910448 0.7940299 0.7970149 0.8029851 #> [29] 0.8119403 0.8268657 0.8328358 0.8358209 0.8388060 0.8417910 0.8477612 #> [36] 0.8507463 0.8626866 0.8656716 0.8686567 0.8716418 0.8776119 0.8805970 #> [43] 0.8835821 0.8865672 0.8895522 0.8925373 0.8955224 0.8985075 0.9014925 #> [50] 0.9074627 0.9104478 0.9134328 0.9164179 0.9194030 0.9223881 0.9253731 #> [57] 0.9313433 0.9343284 0.9373134 0.9402985 0.9432836 0.9462687 0.9522388 #> [64] 0.9552239 0.9582090 0.9611940 0.9641791 0.9671642 0.9701493 0.9731343 #> [71] 0.9761194 0.9791045 0.9820896 0.9850746 0.9880597 0.9910448 0.9940299 #> [78] 0.9970149 1.0000000"},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_ll-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"The log-likelihood function — dist_ll","title":"The log-likelihood function — dist_ll","text":"generic function distribution objects. function calculates log-likelihood current parameters xmin value.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_ll-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The log-likelihood function — dist_ll","text":"","code":"dist_ll(m)  # S4 method for class 'conlnorm' dist_ll(m)  # S4 method for class 'conexp' dist_ll(m)  # S4 method for class 'conpl' dist_ll(m)  # S4 method for class 'conweibull' dist_ll(m)  # S4 method for class 'disexp' dist_ll(m)  # S4 method for class 'dislnorm' dist_ll(m)  # S4 method for class 'displ' dist_ll(m)  # S4 method for class 'dispois' dist_ll(m)"},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_ll-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The log-likelihood function — dist_ll","text":"m distribution object.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_ll-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The log-likelihood function — dist_ll","text":"log-likelihood","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_ll-methods.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The log-likelihood function — dist_ll","text":"method alter internal state distribution objects.","code":""},{"path":[]},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_ll-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The log-likelihood function — dist_ll","text":"","code":"########################################## #Load data and create distribution object# ########################################## data(moby_sample) m = displ$new(moby_sample) m$setXmin(7); m$setPars(2)  ########################################## #Calculate the log-likelihood            # ########################################## dist_ll(m) #> [1] -1328.11"},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_pdf-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"The probability density function (pdf) — dist_pdf","title":"The probability density function (pdf) — dist_pdf","text":"generic function distribution objects. function calculates probability density function (pdf) current parameters xmin value.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_pdf-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The probability density function (pdf) — dist_pdf","text":"","code":"dist_pdf(m, q = NULL, log = FALSE)  # S4 method for class 'conlnorm' dist_pdf(m, q = NULL, log = FALSE)  # S4 method for class 'conexp' dist_pdf(m, q = NULL, log = FALSE)  # S4 method for class 'conpl' dist_pdf(m, q = NULL, log = FALSE)  # S4 method for class 'conweibull' dist_pdf(m, q = NULL, log = FALSE)  # S4 method for class 'disexp' dist_pdf(m, q = NULL, log = FALSE)  # S4 method for class 'dislnorm' dist_pdf(m, q = NULL, log = FALSE)  # S4 method for class 'displ' dist_pdf(m, q = NULL, log = FALSE)  # S4 method for class 'dispois' dist_pdf(m, q = NULL, log = FALSE)"},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_pdf-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The probability density function (pdf) — dist_pdf","text":"m distribution object. q vector values function evaluated. q NULL (default), data values used. log default FALSE. TRUE, probabilities given log(p).","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_pdf-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The probability density function (pdf) — dist_pdf","text":"probability density (mass) function","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_pdf-methods.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The probability density function (pdf) — dist_pdf","text":"method alter internal state distribution objects.","code":""},{"path":[]},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_pdf-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The probability density function (pdf) — dist_pdf","text":"","code":"########################################## #Create distribution object              # ########################################## m = displ$new() m$setXmin(7); m$setPars(2)  ########################################## #Calculate the pdf at particular values  # ########################################## dist_pdf(m, 7:10) #> [1] 0.13291308 0.10176158 0.08040421 0.06512741"},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_rand-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Random number generation for the distribution objects — dist_rand","title":"Random number generation for the distribution objects — dist_rand","text":"generic function generating random numbers underlying distribution distribution reference objects. function generates n random numbers using parameters xmin values found associated reference object.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_rand-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random number generation for the distribution objects — dist_rand","text":"","code":"dist_rand(m, n)  # S4 method for class 'conlnorm' dist_rand(m, n = \"numeric\")  # S4 method for class 'conexp' dist_rand(m, n = \"numeric\")  # S4 method for class 'conpl' dist_rand(m, n = \"numeric\")  # S4 method for class 'conweibull' dist_rand(m, n = \"numeric\")  # S4 method for class 'disexp' dist_rand(m, n = \"numeric\")  # S4 method for class 'dislnorm' dist_rand(m, n = \"numeric\")  # S4 method for class 'displ' dist_rand(m, n = \"numeric\")  # S4 method for class 'dispois' dist_rand(m, n = \"numeric\")"},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_rand-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random number generation for the distribution objects — dist_rand","text":"m distribution object. n number observations generated.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_rand-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random number generation for the distribution objects — dist_rand","text":"n random numbers","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_rand-methods.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Random number generation for the distribution objects — dist_rand","text":"method alter internal state distribution object.","code":""},{"path":[]},{"path":"http://csgillespie.github.io/poweRlaw/reference/dist_rand-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random number generation for the distribution objects — dist_rand","text":"","code":"########################################## #Create distribution object              # ########################################## m = displ$new() m$setXmin(7);m$setPars(2)  ########################################## #Generate five random numbers            # ########################################## dist_rand(m, 5) #> [1] 34 35 11  8 11"},{"path":"http://csgillespie.github.io/poweRlaw/reference/dplcon.html","id":null,"dir":"Reference","previous_headings":"","what":"The continuous power-law distribution — dplcon","title":"The continuous power-law distribution — dplcon","text":"Density distribution function continuous power-law distribution, parameters xmin alpha.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dplcon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The continuous power-law distribution — dplcon","text":"","code":"dplcon(x, xmin, alpha, log = FALSE)  pplcon(q, xmin, alpha, lower.tail = TRUE)  rplcon(n, xmin, alpha)"},{"path":"http://csgillespie.github.io/poweRlaw/reference/dplcon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The continuous power-law distribution — dplcon","text":"x, q vector quantiles. discrete power-law distribution defined x > xmin xmin lower bound power-law distribution. continuous power-law, xmin >= 0. discrete distribution, xmin > 0. alpha scaling parameter: alpha > 1. log logical (default FALSE) TRUE, log values returned. lower.tail logical; TRUE (default), probabilities \\(P[X \\le x]\\), otherwise, \\(P[X > x]\\). n Number observations. length(n) > 1, length taken number required.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dplcon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The continuous power-law distribution — dplcon","text":"dplcon gives denisty pplcon gives distribution function.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dplcon.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The continuous power-law distribution — dplcon","text":"discrete random number generator inefficient","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dplcon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The continuous power-law distribution — dplcon","text":"","code":"xmin = 1; alpha = 1.5 x = seq(xmin, 10, length.out=1000) plot(x, dplcon(x, xmin, alpha), type=\"l\")  plot(x, pplcon(x, xmin, alpha), type=\"l\", main=\"Distribution function\")  n = 1000 con_rns = rplcon(n, xmin, alpha) con_rns = sort(con_rns) p = rep(1/n, n) #Zipfs plot plot(con_rns, rev(cumsum(p)), log=\"xy\", type=\"l\")"},{"path":"http://csgillespie.github.io/poweRlaw/reference/dpldis.html","id":null,"dir":"Reference","previous_headings":"","what":"Discrete power-law distribution — dpldis","title":"Discrete power-law distribution — dpldis","text":"Density, distribution function random number generation discrete power law distribution parameters xmin alpha.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dpldis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discrete power-law distribution — dpldis","text":"","code":"dpldis(x, xmin, alpha, log = FALSE)  ppldis(q, xmin, alpha, lower.tail = TRUE)  rpldis(n, xmin, alpha, discrete_max = 10000)"},{"path":"http://csgillespie.github.io/poweRlaw/reference/dpldis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discrete power-law distribution — dpldis","text":"x, q vector quantiles. discrete power-law distribution defined x > xmin. xmin lower bound power-law distribution. continuous power-law, xmin >= 0. discrete distribution, xmin > 0. alpha scaling parameter: alpha > 1. log logical (default FALSE) TRUE, log values returned. lower.tail logical; TRUE (default), probabilities \\(P[X \\le x]\\), otherwise, \\(P[X > x]\\). n Number observations. length(n) > 1, length taken number required. discrete_max value switch discrete random numbers CTN approximation.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dpldis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discrete power-law distribution — dpldis","text":"dpldis returns density, ppldis returns distribution function rpldis return random numbers.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dpldis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Discrete power-law distribution — dpldis","text":"Clauset, 2009 paper provides algorithm generating discrete random numbers. However, algorithm implemented R, gives terrible performance. algorithm involves \"growing vectors\". Another problem alpha close 1, can result large random number generated (means need calculate discrete CDF large values). algorithm provided package generates true discrete random numbers 10,000 switches using continuous random numbers. switching point can altered changing discrete_max argument. order get efficient power-law discrete random number generator, algorithm needs implemented C.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dpldis.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Discrete power-law distribution — dpldis","text":"naming functions mirrors standard R functions, .e. dnorm. alpha close one, generating random number can slow.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dpldis.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Discrete power-law distribution — dpldis","text":"Clauset, Aaron, Cosma Rohilla Shalizi, Mark EJ Newman. \"Power-law distributions empirical data.\" SIAM review 51.4 (2009): 661-703.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/dpldis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Discrete power-law distribution — dpldis","text":"","code":"xmin = 1; alpha = 2 x = xmin:100  plot(x, dpldis(x, xmin, alpha), type=\"l\")  plot(x, ppldis(x, xmin, alpha), type=\"l\", main=\"Distribution function\")  dpldis(1, xmin, alpha) #> [1] 0.6079271  ############################################### ## Random number generation                   # ############################################### n = 1e5 x1 = rpldis(n, xmin, alpha) ## Compare with exact (dpldis(1, xmin, alpha)) sum(x1==1)/n #> [1] 0.60889 ## Using only the approximation x2 = rpldis(n, xmin, alpha, 0) sum(x2==1)/n #> [1] 0.66452"},{"path":"http://csgillespie.github.io/poweRlaw/reference/estimate_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates the distributions using mle. — estimate_pars","title":"Estimates the distributions using mle. — estimate_pars","text":"estimate_pars estimates distribution's parameters using maximum likelihood estimator. estimate conditional current xmin value.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/estimate_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates the distributions using mle. — estimate_pars","text":"","code":"estimate_pars(m, pars = NULL)"},{"path":"http://csgillespie.github.io/poweRlaw/reference/estimate_pars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimates the distributions using mle. — estimate_pars","text":"m reference class object contains data. pars default NULL. vector matrix (number columns equal number parameters) parameters used #' optimise . Otherwise, value xmin, mle used, .e. estimate_pars(m). small samples, mle may biased.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/estimate_pars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimates the distributions using mle. — estimate_pars","text":"returns list.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/estimate_pars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimates the distributions using mle. — estimate_pars","text":"","code":"data(moby_sample) m = displ$new(moby_sample) estimate_xmin(m) #> $gof #> [1] 0.01554137 #>  #> $xmin #> [1] 7 #>  #> $pars #> [1] 1.957412 #>  #> $ntail #> [1] 335 #>  #> $distance #> [1] \"ks\" #>  #> attr(,\"class\") #> [1] \"estimate_xmin\" m$setXmin(7) estimate_pars(m) #> $pars #> [1] 1.957411 #>  #> $value #> [1] 1327.789 #>  #> $counts #> function gradient  #>        5        5  #>  #> $convergence #> [1] 0 #>  #> $message #> [1] \"CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH\" #>  #> attr(,\"class\") #> [1] \"estimate_pars\""},{"path":"http://csgillespie.github.io/poweRlaw/reference/estimate_xmin.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating the lower bound (xmin) — get_bootstrap_sims","title":"Estimating the lower bound (xmin) — get_bootstrap_sims","text":"fitting heavy tailed distributions, sometimes necessary estimate lower threshold, xmin. lower bound estimated minimising Kolmogorov-Smirnoff statistic (described Clauset, Shalizi, Newman (2009)). get_KS_statistic Calculates KS statistic particular value xmin. estimate_xmin Estimates optimal lower cutoff using goodness--fit based approach. function may issue warnings fitting lognormal, Poisson Exponential distributions. warnings occur large values xmin. Essentially, discarding bulk distribution calculate tails enough accuracy. bootstrap Estimates unncertainty xmin parameter values via bootstrapping. bootstrap_p Performs bootstrapping hypothesis test determine whether suggested (typically power law) distribution plausible. available distributions dist_rand methods available.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/estimate_xmin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimating the lower bound (xmin) — get_bootstrap_sims","text":"","code":"get_bootstrap_sims(m, no_of_sims, seed, threads = 1)  bootstrap(   m,   xmins = NULL,   pars = NULL,   xmax = 1e+05,   no_of_sims = 100,   threads = 1,   seed = NULL,   distance = \"ks\" )  get_bootstrap_p_sims(m, no_of_sims, seed, threads = 1)  bootstrap_p(   m,   xmins = NULL,   pars = NULL,   xmax = 1e+05,   no_of_sims = 100,   threads = 1,   seed = NULL,   distance = \"ks\" )  get_distance_statistic(m, xmax = 1e+05, distance = \"ks\")  estimate_xmin(m, xmins = NULL, pars = NULL, xmax = 1e+05, distance = \"ks\")"},{"path":"http://csgillespie.github.io/poweRlaw/reference/estimate_xmin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimating the lower bound (xmin) — get_bootstrap_sims","text":"m reference class object contains data. no_of_sims number bootstrap simulations. no_of_sims large, can take run. seed default NULL. integer supplied set.seed, NULL set reproducible seeds. argument passed clusterSetRNGStream. threads number concurrent threads used bootstrap. xmins default 1e5. vector possible values xmin explore. single value passed, represents maximum value search, .e. default search (1, 1e5). See details information. pars default NULL. vector matrix (number columns equal number parameters) parameters used #' optimise . Otherwise, value xmin, mle used, .e. estimate_pars(m). small samples, mle may biased. xmax default 1e5. maximum x value calculated working CDF. See details information. distance string containing distance measure (measures) calculate. Possible values ks reweight. See details information.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/estimate_xmin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimating the lower bound (xmin) — get_bootstrap_sims","text":"estimating xmin discrete distributions, search space comparing data-cdf (empirical cdf) distribution_cdf runs xmin max(x) x data set. can often computationally brutal. particular, bootstrapping generate random numbers power law distribution, long tail. speed computations discrete distributions sensible put upper bound, .e. xmax /explicitly give values search, .e. xmin. Occassionally bootstrapping can generate strange situations. example, values simulated data set less xmin. case, estimated distance measure Inf parameter values, NA. possible distance measures can calculated. default Kolomogorov Smirnoff statistic (KS). equation 3.9 CSN paper. measure currently available reweight, equation 3.11.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/estimate_xmin.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimating the lower bound (xmin) — get_bootstrap_sims","text":"Adapted Laurent Dubroca's code","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/estimate_xmin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimating the lower bound (xmin) — get_bootstrap_sims","text":"","code":"################################################### # Load the data set and create distribution object# ################################################### x = 1:10 m = displ$new(x)  ################################################### # Estimate xmin and pars                          # ################################################### est = estimate_xmin(m) m$setXmin(est)  ################################################### # Bootstrap examples                              # ################################################### if (FALSE) { # \\dontrun{ bootstrap(m, no_of_sims=1, threads=1) bootstrap_p(m, no_of_sims=1, threads=1) } # }"},{"path":"http://csgillespie.github.io/poweRlaw/reference/get_KS_statistic-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated function — get_KS_statistic","title":"Deprecated function — get_KS_statistic","text":"function now deprecated may removed future versions.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/get_KS_statistic-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated function — get_KS_statistic","text":"","code":"get_KS_statistic(m, xmax = 1e+05, distance = \"ks\")"},{"path":"http://csgillespie.github.io/poweRlaw/reference/get_KS_statistic-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated function — get_KS_statistic","text":"m reference class object contains data. xmax default 1e5. maximum x value calculated working CDF. See details information. distance string containing distance measure (measures) calculate. Possible values ks reweight. See details information.","code":""},{"path":[]},{"path":"http://csgillespie.github.io/poweRlaw/reference/get_n.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample size — get_n","title":"Sample size — get_n","text":"Returns sample size data set contained within distribution object.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/get_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample size — get_n","text":"","code":"get_n(m)"},{"path":"http://csgillespie.github.io/poweRlaw/reference/get_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample size — get_n","text":"m distribution object.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/get_n.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample size — get_n","text":"","code":"################################################ # Load data and create example object ################################################ data(moby_sample) m = displ$new(moby_sample) ################################################ # get_n and length should return the same value ################################################ get_n(m) #> [1] 2000 length(moby_sample) #> [1] 2000"},{"path":"http://csgillespie.github.io/poweRlaw/reference/get_ntail.html","id":null,"dir":"Reference","previous_headings":"","what":"Values greater than or equal to xmin — get_ntail","title":"Values greater than or equal to xmin — get_ntail","text":"Returns number data points greater equal current value xmin. Clauset et al, paper called ntail.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/get_ntail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Values greater than or equal to xmin — get_ntail","text":"","code":"get_ntail(m, prop = FALSE, lower = FALSE)"},{"path":"http://csgillespie.github.io/poweRlaw/reference/get_ntail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Values greater than or equal to xmin — get_ntail","text":"m distribution object. prop default FALSE. Return value proportion total sample size lower default FALSE. TRUE returns sample size  - ntail","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/get_ntail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Values greater than or equal to xmin — get_ntail","text":"","code":"################################################ # Load data and create example object ################################################ data(moby_sample) m = displ$new(moby_sample) m$setXmin(7) ################################################ # Get ntail ################################################ get_ntail(m) #> [1] 335 sum(moby_sample >= 7) #> [1] 335"},{"path":"http://csgillespie.github.io/poweRlaw/reference/moby.html","id":null,"dir":"Reference","previous_headings":"","what":"Moby Dick word count — moby","title":"Moby Dick word count — moby","text":"frequency occurrence unique words novel Moby Dick Herman Melville. data set moby_sample 2000 values sampled moby data set.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/moby.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Moby Dick word count — moby","text":"vector","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/moby.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Moby Dick word count — moby","text":"M. E. J. Newman, \"Power laws, Pareto distributions Zipf's law.\" Contemporary Physics 46, 323 (2005).","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/native_american.html","id":null,"dir":"Reference","previous_headings":"","what":"Casualties in the American Indian Wars (1776 and 1890) — native_american","title":"Casualties in the American Indian Wars (1776 and 1890) — native_american","text":"data files contain observed casualties American Indian Wars. data sets native_american us_american contain casualties Native American US American sides respectively. data set data frame, two columns: number casualties conflict date.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/native_american.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Casualties in the American Indian Wars (1776 and 1890) — native_american","text":"Data frame","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/native_american.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Casualties in the American Indian Wars (1776 and 1890) — native_american","text":"Friedman, Jeffrey . \"Using Power Laws Estimate Conflict Size.\" Journal conflict resolution (2014).","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/plot-distribution-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plotting functions — lines,distribution-method","title":"Generic plotting functions — lines,distribution-method","text":"generic functions distribution  reference objects. Standard plotting functions, .e. plot, points, lines work distribution objects.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/plot-distribution-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plotting functions — lines,distribution-method","text":"","code":"# S4 method for class 'distribution' lines(x, cut = FALSE, draw = TRUE, length.out = 100, ...)  # S4 method for class 'distribution' plot(x, cut = FALSE, draw = TRUE, ...)  # S4 method for class 'distribution' points(x, cut = FALSE, draw = TRUE, length.out = 100, ...)"},{"path":"http://csgillespie.github.io/poweRlaw/reference/plot-distribution-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plotting functions — lines,distribution-method","text":"x distribution reference object. cut logical (default FALSE) - plot begin. cut=FALSE, plot start minimum data value. Otherwise, plot start xmin draw logical (default TRUE). plot/lines/points function plot return data (data frame object). length.numeric, default 100. many points distribution evaulated . argument plotting fitted lines. ... arguments passed lines functions.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/plot-distribution-method.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Generic plotting functions — lines,distribution-method","text":"method alter internal state distribution objects.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/plot.bs_xmin.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot methods for bootstrap objects — plot.bs_xmin","title":"Plot methods for bootstrap objects — plot.bs_xmin","text":"simple wrapper around plot function aid visualising bootstrap results. values plotted returned invisible object.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/plot.bs_xmin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot methods for bootstrap objects — plot.bs_xmin","text":"","code":"# S3 method for class 'bs_xmin' plot(x, trim = 0.1, ...)  # S3 method for class 'bs_p_xmin' plot(x, trim = 0.1, ...)  # S3 method for class 'compare_distributions' plot(x, ...)"},{"path":"http://csgillespie.github.io/poweRlaw/reference/plot.bs_xmin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot methods for bootstrap objects — plot.bs_xmin","text":"x object class bs_xmin bs_p_xmin trim plotting cumulative means standard deviation, first trim percentage values displayed. default trim=0.1 ... graphics parameters passed plotting routines.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/population.html","id":null,"dir":"Reference","previous_headings":"","what":"City boundaries and the universality of scaling laws — population","title":"City boundaries and the universality of scaling laws — population","text":"data set contains population size cities towns England. details algorithm used determine city boundries, see referenced paper.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/population.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"City boundaries and the universality of scaling laws — population","text":"vector","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/population.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"City boundaries and the universality of scaling laws — population","text":"Arcaute, Elsa, et al. \"City boundaries universality scaling laws.\" arXiv preprint arXiv:1301.1674 (2013).","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/poweRlaw-package.html","id":null,"dir":"Reference","previous_headings":"","what":"The poweRlaw package — poweRlaw-package","title":"The poweRlaw package — poweRlaw-package","text":"poweRlaw package aims make fitting power laws heavy-tailed distributions straightforward. package contains R functions fitting, comparing visualising heavy tailed distributions. Overall, provides principled approach fitting power laws data.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/poweRlaw-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The poweRlaw package — poweRlaw-package","text":"code developed package heavily influenced  R code Laurent Dubroca Cosma Shalizi.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/poweRlaw-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The poweRlaw package — poweRlaw-package","text":". Clauset, C.R. Shalizi, M.E.J. Newman, \"Power-law distributions empirical data\" SIAM Review 51(4), 661-703 (2009).","code":""},{"path":[]},{"path":"http://csgillespie.github.io/poweRlaw/reference/poweRlaw-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The poweRlaw package — poweRlaw-package","text":"colin.gillespie@newcastle.ac.uk","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/show-distribution-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic show method for distribution objects — show,distribution-method","title":"Generic show method for distribution objects — show,distribution-method","text":"distribution objects internal structure used caching purposes. Using default show method gives illusion duplicate values. show method aims avoid confusion.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/show-distribution-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic show method for distribution objects — show,distribution-method","text":"","code":"# S4 method for class 'distribution' show(object)"},{"path":"http://csgillespie.github.io/poweRlaw/reference/show-distribution-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic show method for distribution objects — show,distribution-method","text":"object distribution object.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/swiss_prot.html","id":null,"dir":"Reference","previous_headings":"","what":"Word frequency in the Swiss-Prot database — swiss_prot","title":"Word frequency in the Swiss-Prot database — swiss_prot","text":"dataset contains words extracted Swiss-Prot version 9 data (resulting frequency word). datasets database versions can obtained contacting Michael Bell Full details http://arxiv.org/abs/arXiv:1208.2175v1","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/swiss_prot.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Word frequency in the Swiss-Prot database — swiss_prot","text":"data frame","code":""},{"path":"http://csgillespie.github.io/poweRlaw/reference/swiss_prot.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Word frequency in the Swiss-Prot database — swiss_prot","text":"Bell, MJ, Gillespie, CS, Swan, D, Lord, P. approach describing analysing bulk biological annotation quality: case study using UniProtKB. Bioinformatics 2012, 28, i562-i568.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-08009001","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.80.0.9001","title":"poweRlaw 0.80.0.9001","text":"fix: Catch extreme tail situations lognormal distribution #88. fix: Package engine vignette fix: linting feat: Add pkgdown Website","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0706","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.70.6","title":"poweRlaw 0.70.6","text":"CRAN release: 2020-04-25 Change scrpage2 scrlayer-scrpage vignettes. scrpage2 now obsolete. Removed unused Suggests.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0705","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.70.5","title":"poweRlaw 0.70.5","text":"CRAN release: 2020-04-23 Use pracma calculating zeta(). VGAM may getting archived.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0704","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.70.4","title":"poweRlaw 0.70.4","text":"CRAN release: 2020-04-07 v0.70.3, README URL tweaked CRAN (www. -> https://www.)","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0703","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.70.3","title":"poweRlaw 0.70.3","text":"Fix typo file name. Better handling extreme data. Bug fix: Setting seed = NULL lead repeatable random numbers. now avoided. Bug fix: Set correct lower bound weibull optimiser Retrieve simulations via get_*_sims() functions. Indicate values x larger xmax.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0702","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.70.2","title":"poweRlaw 0.70.2","text":"CRAN release: 2019-01-10 Bug fix: Input output dpldis (thanks @mpadge #73). Optimisation: Used compressed data ll calculations lognormal (thanks @maxbiostat #80).","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0701","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.70.1","title":"poweRlaw 0.70.1","text":"CRAN release: 2017-08-29 Bug fix: rarely bootstrapping results singular datasets.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0700","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.70.0","title":"poweRlaw 0.70.0","text":"CRAN release: 2016-12-22 Update documentation Bug fix: 1 sided p-value Vuong’s. Now pass matrix parameters estimating xmin (fixes #68). Used lognormal distribution.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0603","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.60.3","title":"poweRlaw 0.60.3","text":"CRAN release: 2016-04-12 Incorrect p-value bootstrap_p (fixes #64). Thanks @lsaravia reporting.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0600","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.60.0","title":"poweRlaw 0.60.0","text":"CRAN release: 2016-03-31 New distance argument estimate_xmin bootstrap functions. longer limited KS distance measure. Better error handling bootstrap function. Fix https://github.com/csgillespie/poweRlaw/issues/60. Thanks @lsaravia reporting. Added Weibull distribution. Fix https://github.com/csgillespie/poweRlaw/issues/57.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0501-not-on-cran","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.50.1 (not on CRAN)","title":"poweRlaw 0.50.1 (not on CRAN)","text":"Bug fix: Export get_n bootstrap_p. Fix https://github.com/csgillespie/poweRlaw/issues/53. Thanks @AnaCG reporting.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0500","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.50.0","title":"poweRlaw 0.50.0","text":"CRAN release: 2015-08-11 Added get_ntail function returns number points greater equal xmin. Added get_n function returns sample size. Bug fix: bootstrap_p incorrect CTN models (https://github.com/csgillespie/poweRlaw/issues/52). Thanks @lsaravia reporting diagnosing problem.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0400-not-on-cran","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.40.0 (not on CRAN)","title":"poweRlaw 0.40.0 (not on CRAN)","text":"Add ByteCompile flag. Testing suggests bootstrapping now around twice fast. Added seed package_# poweRlaw output bootstrap bootstrap_p. Added poisson random number generator.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0302","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.30.2","title":"poweRlaw 0.30.2","text":"CRAN release: 2015-04-16 Bug fix: Plotting data cdf failed data values larger xmax (https://github.com/csgillespie/poweRlaw/issues/40). Thanks @LaurentFranckx","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0301","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.30.1","title":"poweRlaw 0.30.1","text":"CRAN release: 2015-03-13 Bug fix: pdf cdf functions now handle values q less xmin sensible way (Thanks Pierce Brookss)","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0300","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.30.0","title":"poweRlaw 0.30.0","text":"CRAN release: 2015-02-20 New package title satisfy CRAN new xmax argument added bootstrap estimate_xmin functions. argument limits search space calculating KS statistic. all_values argument removed dist_cdf. new function dist_all_cdf created. Added random number generators log normal exponential functions (https://github.com/csgillespie/poweRlaw/issues/32) Added seed argument bootstrap bootstrap_p functions Added warning message handle estimation tail regions (https://github.com/csgillespie/poweRlaw/issues/31) Bug fix: Bootstrap edge cases (https://github.com/csgillespie/poweRlaw/issues/29) @jkeirstead","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0205","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.20.5","title":"poweRlaw 0.20.5","text":"CRAN release: 2014-06-12 changes tolerance test suite comparison (Solaris-sparc failed build)","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0204","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.20.4","title":"poweRlaw 0.20.4","text":"Added tolerance test suite comparison (Solaris-sparc failed build) Removed tufte vignette styles","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0203","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.20.3","title":"poweRlaw 0.20.3","text":"CRAN release: 2014-05-27 Test suite now included package Improved numerical stability working discrete exp log normal pdfs (https://github.com/csgillespie/poweRlaw/issues/21) Merged data_max xmins argument estimate_xmin function Added example copying distribution objects (https://github.com/csgillespie/poweRlaw/issues/9) Added new vignette comparing distributions (https://github.com/csgillespie/poweRlaw/issues/8) Bug fix: estimating xmin possible (e.g. enough data), estimate_xmin now returns NA rather error (https://github.com/csgillespie/poweRlaw/issues/25) Bug fix: setting parameters distributions, longer strict class comparison Bug fix: Error length xmins 1 estimate_xmin (https://github.com/csgillespie/poweRlaw/issues/20). Thanks @linzhp Bug fix: Generating random numbers discrete power-law distribution wasn’t quite right small x values. (https://github.com/csgillespie/poweRlaw/issues/24). Thanks @wrhaas.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0202","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.20.2","title":"poweRlaw 0.20.2","text":"CRAN release: 2013-12-19 Discrete power-law mle now uses L-BFGS-B optimiser default Vignette source now included within package Bug fix lines methods Bug fix: use data_max argument estimate_xmin (https://github.com/csgillespie/poweRlaw/issues/13) Thanks @pgoldberg.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0201","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.20.1","title":"poweRlaw 0.20.1","text":"CRAN release: 2013-06-25 Updated documentation Added swiss_prot data set Renamed NativeAmerican native_american Renamed USAmerican us_american Changed license GPL-2 | GPL-3","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0200","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.20.0","title":"poweRlaw 0.20.0","text":"CRAN release: 2013-06-07 Added discrete exponential function Added compare_distribution functions dist_pdf now log argument Updated documentation Bug fixes","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0170","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.17.0","title":"poweRlaw 0.17.0","text":"Added discrete log normal, log normal poisson distributions. Generic plot functions added bootstrap output. Test suite. New examples vignette. Bug fixes","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0161","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.16.1","title":"poweRlaw 0.16.1","text":"bootstrap_xmin now implements procedure described Clauset bootstrap_p estimates p-value","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0160","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.16.0","title":"poweRlaw 0.16.0","text":"Added dist_data_cdf_function Can now plot entire data line add distribution lines starting xmin Added vignette Improved documentation Deprecated pl_data data class","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0152","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.15.2","title":"poweRlaw 0.15.2","text":"Generating discrete random numbers took much memory. Reduced threshold switching CTN PL distribution.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0151","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.15.1","title":"poweRlaw 0.15.1","text":"Bug fix lines points function","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0150","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.15.0","title":"poweRlaw 0.15.0","text":"Adding support continuous power-laws","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0144","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.14.4","title":"poweRlaw 0.14.4","text":"visible changes - preparing future R # poweRlaws. Added discrete_xmax parameter discrete random number generator. parameter controls change using (true) discrete random number generator CTN approximation.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0143","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.14.3","title":"poweRlaw 0.14.3","text":"xmin now set minimum value x","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0142","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.14.2","title":"poweRlaw 0.14.2","text":"Plots, lines points functions now return data using invisible Moved parSapplyLB Added bootstrap_moby data set.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-0141","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.14.1","title":"poweRlaw 0.14.1","text":"Bug fix calculating bootstrapping p-value","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-014","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.14","title":"poweRlaw 0.14","text":"Added explicit garbage collection call bootstrap routine avoid memory issues.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-013","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.13","title":"poweRlaw 0.13","text":"Created estimate_pars method - mle estimate parameters.","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-012","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.12","title":"poweRlaw 0.12","text":"Fixed bug calculating KS statistics Updated docs","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-011","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.11","title":"poweRlaw 0.11","text":"Fixed bug random number generator Updated docs","code":""},{"path":"http://csgillespie.github.io/poweRlaw/news/index.html","id":"powerlaw-01","dir":"Changelog","previous_headings":"","what":"poweRlaw 0.1","title":"poweRlaw 0.1","text":"Initial release","code":""}]
